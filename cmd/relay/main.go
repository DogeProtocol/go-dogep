// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * QC Read API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

package main

import (
	"fmt"
	"net/http"
	"os"

	read "github.com/DogeProtocol/dp/relay/readapi"
	write "github.com/DogeProtocol/dp/relay/writeapi"
)

func printHelp() {
	fmt.Println("===========")
	fmt.Println("relay readapi READ_PORT")
	fmt.Println("relay writeapi WRITE_PORT")
	fmt.Println("===========")
}

func main() {
	if len(os.Args) < 2 {
		printHelp()
		return
	}

	if os.Args[1] == "readapi" {
		ReadApi()
	} else if os.Args[1] == "writeapi" {
		WriteApi()
	} else {
		printHelp()
	}
}

func ReadApi() {
	if len(os.Args) < 2 {
		printHelp()
		return
	}

	port := os.Args[2]

	ReadApiAPIService := read.NewReadApiAPIService()
	ReadApiAPIController := read.NewReadApiAPIController(ReadApiAPIService)
	readRouter := read.NewRouter(ReadApiAPIController)

	fmt.Println("Read api server is listening on : ", port)
	http.ListenAndServe(":" + port, readRouter)
}

func WriteApi() {
	if len(os.Args) < 2 {
		printHelp()
		return
	}

	port := os.Args[2]

	WriteApiAPIService := write.NewWriteApiAPIService()
	WriteApiAPIController := write.NewWriteApiAPIController(WriteApiAPIService)
	writeRouter := write.NewRouter(WriteApiAPIController)

	fmt.Println("Write api server is listening on : ", port)
	http.ListenAndServe(":" + port,  writeRouter)
}

