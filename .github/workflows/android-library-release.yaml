name: android library Release
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: true

      matrix:
        os: [ubuntu-latest]
        build_type: [Release]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
       go-version: '^1.21.1'
    - name: Check Files
      run: |
           ls /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/
           ls /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-*
           ls /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-*
           ls /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-*
           ls /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-*
    - name: Create build folder
      run: |
        mkdir ${{ github.workspace }}/build
        mkdir ${{ github.workspace }}/build/armeabi-v7a
        mkdir ${{ github.workspace }}/build/arm64-v8a
        mkdir ${{ github.workspace }}/build/x86
        mkdir ${{ github.workspace }}/build/x86_64
    - name: Build Android library
      env:
        LIB_PATH: /usr/local/lib/android/sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/linux-x86_64/bin
      run: |                
        export CGO_ENABLED=1
        export GOOS=android
        export GOARCH=arm64
        export CC=$LIB_PATH/aarch64-linux-android21-clang  
        export CXX=$LIB_PATH/aarch64-linux-android21-clang++ 
        go build -o ${{ github.workspace }}/build/arm64-v8a/libgodp.so ${{ github.workspace }}/wasm/mobile/main.go
        export GOARCH=386
        export CC=$LIB_PATH/i686-linux-android21-clang  
        export CXX=$LIB_PATH/i686-linux-android21-clang++ 
        go build -o ${{ github.workspace }}/build/x86/libgodp.so ${{ github.workspace }}/wasm/mobile/main.go
        export GOARCH=amd64
        export CC=$LIB_PATH/x86_64-linux-android21-clang
        export CXX=$LIB_PATH/x86_64-linux-android21-clang++ 
        go build -o ${{ github.workspace }}/build/x86_64/libgodp.so ${{ github.workspace }}/wasm/mobile/main.go
        export GOARCH=arm
        export GOARM=7
        export CC=$LIB_PATH/armv7a-linux-androideabi21-clang  
        export CXX=$LIB_PATH/armv7a-linux-androideabi21-clang++ 
        go build -o ${{ github.workspace }}/build/armeabi-v7a/libgodp.so ${{ github.workspace }}/wasm/mobile/main.go
    - name: Check Files
      run:  ls  ${{ github.workspace }}/build
    - name: Create Release
      run: |
        tar -czf ${{ github.workspace }}/build/android-armeabi-v7a.gz ${{ github.workspace }}/build/armeabi-v7a/.
        sha256sum ${{ github.workspace }}/build/android-armeabi-v7a.gz >${{ github.workspace }}/build/android-armeabi-v7a.txt
        tar -czf ${{ github.workspace }}/build/android-arm64-v8a.gz ${{ github.workspace }}/build/arm64-v8a/.
        sha256sum ${{ github.workspace }}/build/android-arm64-v8a.gz >${{ github.workspace }}/build/android-arm64-v8a.txt
        tar -czf ${{ github.workspace }}/build/android-x86.gz ${{ github.workspace }}/build/x86/.
        sha256sum ${{ github.workspace }}/build/android-x86.gz >${{ github.workspace }}/build/android-x86.txt
        tar -czf ${{ github.workspace }}/build/android-x86_64.gz ${{ github.workspace }}/build/x86_64/.
        sha256sum ${{ github.workspace }}/build/android-x86_64.gz >${{ github.workspace }}/build/android--x86_64.txt
    - name: Check Release Files
      run: |
        ls  ${{ github.workspace }}/build/android-*.*
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: android-library-release
        path: |
          ${{ github.workspace }}/build/*.*
    - name: release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "build/*.gz,build/*.txt"